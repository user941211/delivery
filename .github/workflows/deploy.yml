name: Deploy to Vercel & Railway

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'
  YARN_VERSION: '4.0.0'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test & Build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Enable Yarn
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Type check
        run: yarn type-check

      - name: Lint
        run: yarn lint

      - name: Test API
        run: cd apps/api && yarn test

      - name: Build API
        run: cd apps/api && yarn build

      - name: Build Web
        run: cd apps/web && yarn build
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}

  deploy-web:
    needs: test
    runs-on: ubuntu-latest
    name: Deploy Web App to Vercel
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Enable Yarn
        run: corepack enable

      - name: Install Vercel CLI
        run: yarn global add vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: apps/web

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: apps/web
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: apps/web

  deploy-api:
    needs: test
    runs-on: ubuntu-latest
    name: Deploy API to Railway
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Enable Yarn
        run: corepack enable

      - name: Install Railway CLI
        run: yarn global add @railway/cli

      - name: Deploy to Railway
        run: railway up --service=${{ secrets.RAILWAY_SERVICE_NAME }}
        working-directory: apps/api
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  notify:
    needs: [deploy-web, deploy-api]
    runs-on: ubuntu-latest
    name: Notify Deployment Status
    if: always() && github.ref == 'refs/heads/main'
    steps:
      - name: Notify Success
        if: needs.deploy-web.result == 'success' && needs.deploy-api.result == 'success'
        run: |
          echo "üöÄ Deployment successful!"
          echo "Web App: https://${{ secrets.VERCEL_PROJECT_NAME }}.vercel.app"
          echo "API: https://${{ secrets.RAILWAY_PROJECT_NAME }}.railway.app"

      - name: Notify Failure
        if: needs.deploy-web.result == 'failure' || needs.deploy-api.result == 'failure'
        run: |
          echo "‚ùå Deployment failed!"
          echo "Web deployment: ${{ needs.deploy-web.result }}"
          echo "API deployment: ${{ needs.deploy-api.result }}"

      # ÏÑ†ÌÉùÏÇ¨Ìï≠: Slack ÏïåÎ¶º
      - name: Slack Notification
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#deployment'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 