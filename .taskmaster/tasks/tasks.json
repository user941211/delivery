{
  "projectInfo": {
    "name": "배달 플랫폼 개발",
    "description": "고객, 배달 기사, 점주를 연결하는 종합적인 배달 플랫폼",
    "version": "1.0.0",
    "createdAt": "2024-01-01",
    "lastModified": "2024-01-01"
  },
  "tasks": [
    {
      "id": 1,
      "title": "개발 환경 설정",
      "description": "프로젝트 전체 개발 환경 구성 및 모노레포 설정",
      "status": "done",
      "priority": "high",
      "dependencies": [],
      "details": "Yarn Workspaces 기반 모노레포 구조 생성, Docker Compose 설정, 기본 패키지 설치 및 설정 파일 구성",
      "testStrategy": "로컬 개발 환경에서 모든 프로젝트가 정상적으로 빌드되고 실행되는지 확인",
      "phase": "Phase 1",
      "subtasks": [
        {
          "id": 1,
          "title": "모노레포 기본 구조 생성",
          "description": "apps/, packages/, tools/ 폴더를 포함한 기본 디렉토리 구조 생성",
          "details": "배달 플랫폼 모노레포의 핵심 폴더 구조를 생성합니다. apps/ (web, mobile, api), packages/ (shared, ui, database), tools/ (scripts, config)",
          "status": "done",
          "dependencies": [],
          "parentTaskId": 1
        },
        {
          "id": 2,
          "title": "루트 package.json 및 Yarn Workspaces 설정",
          "description": "프로젝트 루트에 package.json 생성 및 Yarn Workspaces 설정",
          "details": "모노레포 관리를 위한 루트 package.json 설정, workspaces 패턴 정의, 공통 dependencies 관리",
          "status": "done",
          "dependencies": [],
          "parentTaskId": 1
        },
        {
          "id": 3,
          "title": "TypeScript 공통 설정",
          "description": "모노레포 전체에서 사용할 TypeScript 설정 파일 구성",
          "details": "tsconfig.json (루트), tsconfig.base.json (공통 설정), 각 앱별 개별 설정 파일",
          "status": "done",
          "dependencies": [],
          "parentTaskId": 1
        },
        {
          "id": 4,
          "title": "ESLint/Prettier 공통 설정",
          "description": "코드 품질 및 포맷팅을 위한 ESLint, Prettier 설정",
          "details": ".eslintrc.js, .prettierrc, .prettierignore 설정 및 공통 규칙 적용",
          "status": "done",
          "dependencies": [],
          "parentTaskId": 1
        },
        {
          "id": 5,
          "title": "빌드 도구 설정 (Turbo)",
          "description": "모노레포 빌드 최적화를 위한 Turbo 설정",
          "details": "turbo.json 설정, 빌드 파이프라인 정의, 캐싱 전략 구성",
          "status": "done",
          "dependencies": [],
          "parentTaskId": 1
        },
        {
          "id": 6,
          "title": "Git 설정 및 .gitignore 구성",
          "description": "Git 저장소 초기화 및 적절한 .gitignore 파일 생성",
          "details": "모노레포에 적합한 .gitignore 설정, node_modules, dist, .env 등 제외 설정",
          "status": "done",
          "dependencies": [],
          "parentTaskId": 1
        },
        {
          "id": 7,
          "title": "환경 변수 템플릿 생성",
          "description": ".env.example 파일 생성 및 필요한 환경 변수 정의",
          "details": "데이터베이스, Supabase, JWT, 결제 API 등 필요한 환경 변수 템플릿 작성",
          "status": "done",
          "dependencies": [],
          "parentTaskId": 1
        }
      ]
    },
    {
      "id": 2,
      "title": "Docker 컨테이너 환경 구성",
      "description": "PostgreSQL, Redis 등 필요한 서비스들의 Docker 환경 설정",
      "status": "done",
      "priority": "high",
      "dependencies": [
        1
      ],
      "details": "docker-compose.yml 작성, PostgreSQL 15+ 컨테이너, Redis 7+ 컨테이너, Adminer 관리 도구 설정",
      "testStrategy": "Docker Compose 실행 후 각 서비스 연결 테스트 및 데이터베이스 접근 확인",
      "phase": "Phase 1"
    },
    {
      "id": 3,
      "title": "Supabase 프로젝트 초기화",
      "description": "Supabase 계정 생성 및 프로젝트 설정, 환경 변수 구성",
      "status": "done",
      "priority": "high",
      "dependencies": [
        2
      ],
      "details": "Supabase 계정 생성, 새 프로젝트 설정, API 키 발급, 환경 변수 설정, 로컬 개발과 연동",
      "testStrategy": "Supabase 연결 테스트 및 기본 API 호출 확인",
      "phase": "Phase 1"
    },
    {
      "id": 4,
      "title": "Next.js 웹 프로젝트 설정",
      "description": "Next.js 14+ App Router 기반 웹 애플리케이션 초기 설정",
      "status": "pending",
      "priority": "medium",
      "dependencies": [
        1
      ],
      "details": "Next.js 프로젝트 생성, TypeScript 설정, Tailwind CSS 설정, shadcn/ui 설치, 기본 라우팅 구조 생성",
      "testStrategy": "개발 서버 실행 및 기본 페이지 렌더링 확인",
      "phase": "Phase 1"
    },
    {
      "id": 5,
      "title": "Expo 모바일 프로젝트 설정",
      "description": "Expo React Native 기반 모바일 애플리케이션 초기 설정",
      "status": "pending",
      "priority": "medium",
      "dependencies": [
        1
      ],
      "details": "Expo 프로젝트 생성, TypeScript 설정, NativeWind 설정, Expo Router 설정, 기본 네비게이션 구조",
      "testStrategy": "Expo 개발 서버 실행 및 시뮬레이터에서 앱 실행 확인",
      "phase": "Phase 1"
    },
    {
      "id": 6,
      "title": "Nest.js API 서버 설정",
      "description": "Nest.js 백엔드 API 서버 초기 설정 및 기본 구조 생성",
      "status": "pending",
      "priority": "high",
      "dependencies": [
        1,
        2
      ],
      "details": "Nest.js 프로젝트 생성, TypeScript 설정, Prisma ORM 설정, 기본 모듈 구조 생성, Swagger 문서화 설정",
      "testStrategy": "API 서버 실행 및 기본 엔드포인트 호출 확인, Swagger 문서 접근 테스트",
      "phase": "Phase 1"
    },
    {
      "id": 7,
      "title": "데이터베이스 스키마 설계",
      "description": "PostgreSQL 기반 핵심 데이터베이스 스키마 설계 및 마이그레이션",
      "status": "pending",
      "priority": "high",
      "dependencies": [
        3,
        6
      ],
      "details": "Users, Restaurants, MenuItems, Orders, OrderItems, Drivers, Deliveries, Payments, Reviews 등 핵심 테이블 설계",
      "testStrategy": "마이그레이션 실행 및 테이블 생성 확인, 기본 데이터 삽입/조회 테스트",
      "phase": "Phase 1"
    },
    {
      "id": 8,
      "title": "공통 타입 및 유틸리티 패키지",
      "description": "프론트엔드와 백엔드에서 공유할 타입 정의 및 유틸리티 함수 작성",
      "status": "pending",
      "priority": "medium",
      "dependencies": [
        7
      ],
      "details": "TypeScript 인터페이스 정의, 공통 상수, 유틸리티 함수, 유효성 검사 스키마 작성",
      "testStrategy": "타입 검사 및 유틸리티 함수 단위 테스트",
      "phase": "Phase 1"
    },
    {
      "id": 9,
      "title": "사용자 인증 시스템",
      "description": "JWT 기반 사용자 인증 및 권한 관리 시스템 구현",
      "status": "pending",
      "priority": "high",
      "dependencies": [
        6,
        7,
        8
      ],
      "details": "회원가입, 로그인, 토큰 갱신, 역할 기반 접근 제어 (Customer, Driver, RestaurantOwner) 구현",
      "testStrategy": "각 역할별 회원가입/로그인 테스트, 토큰 유효성 검증, 권한별 API 접근 테스트",
      "phase": "Phase 2"
    },
    {
      "id": 10,
      "title": "사용자 프로필 관리",
      "description": "사용자 정보 등록, 수정, 조회 기능 구현",
      "status": "pending",
      "priority": "medium",
      "dependencies": [
        9
      ],
      "details": "개인정보 관리, 프로필 이미지 업로드, 주소 관리, 연락처 관리 기능",
      "testStrategy": "프로필 생성/수정/조회 API 테스트, 이미지 업로드 기능 확인",
      "phase": "Phase 2"
    },
    {
      "id": 11,
      "title": "레스토랑 관리 시스템",
      "description": "점주용 레스토랑 등록 및 관리 기능 구현",
      "status": "pending",
      "priority": "high",
      "dependencies": [
        9,
        10
      ],
      "details": "레스토랑 등록, 정보 수정, 영업시간 설정, 카테고리 관리, 이미지 업로드",
      "testStrategy": "레스토랑 CRUD 기능 테스트, 영업시간 로직 검증",
      "phase": "Phase 2"
    },
    {
      "id": 12,
      "title": "메뉴 관리 시스템",
      "description": "레스토랑 메뉴 등록, 수정, 삭제 및 옵션 관리 기능",
      "status": "pending",
      "priority": "high",
      "dependencies": [
        11
      ],
      "details": "메뉴 항목 관리, 가격 설정, 옵션 그룹 관리, 메뉴 이미지 업로드, 품절 관리",
      "testStrategy": "메뉴 CRUD 테스트, 옵션 조합 검증, 이미지 업로드 확인",
      "phase": "Phase 2"
    },
    {
      "id": 13,
      "title": "고객용 레스토랑 검색",
      "description": "위치 기반 레스토랑 검색 및 필터링 기능 구현",
      "status": "pending",
      "priority": "high",
      "dependencies": [
        11,
        12
      ],
      "details": "지역별 검색, 카테고리 필터, 평점 정렬, 거리 계산, 영업 상태 표시",
      "testStrategy": "검색 API 테스트, 필터링 로직 검증, 거리 계산 정확도 확인",
      "phase": "Phase 2"
    },
    {
      "id": 14,
      "title": "장바구니 시스템",
      "description": "고객용 장바구니 기능 및 주문 임시 저장",
      "status": "pending",
      "priority": "medium",
      "dependencies": [
        12,
        13
      ],
      "details": "장바구니 추가/삭제/수정, 옵션 선택, 수량 조절, 가격 계산, 세션 관리",
      "testStrategy": "장바구니 조작 테스트, 가격 계산 정확도, 세션 유지 확인",
      "phase": "Phase 2"
    },
    {
      "id": 15,
      "title": "주문 생성 시스템",
      "description": "장바구니 기반 주문 생성 및 초기 처리",
      "status": "pending",
      "priority": "high",
      "dependencies": [
        14
      ],
      "details": "주문 정보 검증, 주문 생성, 주문 상태 관리, 배달비 계산, 알림 발송",
      "testStrategy": "주문 생성 프로세스 테스트, 가격 계산 검증, 상태 변경 확인",
      "phase": "Phase 2"
    },
    {
      "id": 16,
      "title": "기본 결제 시스템",
      "description": "토스페이먼츠 연동을 통한 기본 결제 기능",
      "status": "pending",
      "priority": "high",
      "dependencies": [
        15
      ],
      "details": "결제 요청, 결제 승인, 결제 실패 처리, 결제 내역 저장, 환불 처리 기본 구조",
      "testStrategy": "테스트 결제 실행, 성공/실패 시나리오 검증, 결제 내역 확인",
      "phase": "Phase 2"
    },
    {
      "id": 17,
      "title": "점주용 주문 관리",
      "description": "점주가 주문을 확인하고 처리할 수 있는 시스템",
      "status": "pending",
      "priority": "high",
      "dependencies": [
        15,
        16
      ],
      "details": "주문 접수, 조리 시간 설정, 주문 상태 업데이트, 주문 거부 기능, 특이사항 처리",
      "testStrategy": "주문 처리 워크플로우 테스트, 상태 변경 알림 확인",
      "phase": "Phase 2"
    },
    {
      "id": 18,
      "title": "배달기사 등록 시스템",
      "description": "배달기사 신청 및 승인 프로세스 구현",
      "status": "pending",
      "priority": "medium",
      "dependencies": [
        9,
        10
      ],
      "details": "배달기사 신청서 작성, 서류 업로드, 승인 프로세스, 차량 정보 등록, 배달 구역 설정",
      "testStrategy": "신청 프로세스 테스트, 서류 업로드 확인, 승인/거부 워크플로우",
      "phase": "Phase 2"
    },
    {
      "id": 19,
      "title": "기본 배달 배정 시스템",
      "description": "주문과 배달기사 간의 기본적인 매칭 시스템",
      "status": "pending",
      "priority": "high",
      "dependencies": [
        17,
        18
      ],
      "details": "거리 기반 배달기사 찾기, 수동 배정, 배달 요청 전송, 수락/거부 처리",
      "testStrategy": "배달기사 매칭 로직 테스트, 요청/응답 처리 확인",
      "phase": "Phase 2"
    },
    {
      "id": 20,
      "title": "기본 UI/UX 구현 - 웹",
      "description": "Next.js 웹 애플리케이션의 핵심 사용자 인터페이스",
      "status": "pending",
      "priority": "medium",
      "dependencies": [
        4,
        9,
        13,
        14,
        15
      ],
      "details": "로그인/회원가입 페이지, 레스토랑 목록, 메뉴 상세, 장바구니, 주문하기 페이지 구현",
      "testStrategy": "사용자 워크플로우 테스트, 반응형 디자인 확인, 접근성 검증",
      "phase": "Phase 2"
    },
    {
      "id": 21,
      "title": "기본 UI/UX 구현 - 모바일",
      "description": "Expo 모바일 애플리케이션의 핵심 사용자 인터페이스",
      "status": "pending",
      "priority": "medium",
      "dependencies": [
        5,
        9,
        13,
        14,
        15
      ],
      "details": "로그인/회원가입 화면, 레스토랑 목록, 메뉴 상세, 장바구니, 주문하기 화면 구현",
      "testStrategy": "모바일 UX 테스트, 다양한 기기 크기 대응 확인, 터치 인터랙션 검증",
      "phase": "Phase 2"
    },
    {
      "id": 22,
      "title": "실시간 주문 상태 추적",
      "description": "WebSocket 기반 실시간 주문 상태 업데이트 시스템",
      "status": "pending",
      "priority": "high",
      "dependencies": [
        6,
        17,
        19
      ],
      "details": "Socket.io 설정, 주문 상태 변경 이벤트 발송, 클라이언트 실시간 업데이트, 연결 관리",
      "testStrategy": "실시간 업데이트 확인, 연결 끊김 처리, 다중 클라이언트 테스트",
      "phase": "Phase 3"
    },
    {
      "id": 23,
      "title": "실시간 위치 추적 시스템",
      "description": "배달기사 위치 실시간 추적 및 고객 공유",
      "status": "pending",
      "priority": "high",
      "dependencies": [
        19,
        22
      ],
      "details": "GPS 위치 수집, 실시간 위치 전송, 지도 표시, 예상 도착 시간 계산",
      "testStrategy": "위치 업데이트 정확도, 실시간 전송 확인, 지도 표시 테스트",
      "phase": "Phase 3"
    },
    {
      "id": 24,
      "title": "채팅 시스템",
      "description": "주문별 고객-점주-배달기사 간 실시간 채팅",
      "status": "pending",
      "priority": "medium",
      "dependencies": [
        22
      ],
      "details": "채팅방 생성, 실시간 메시지 전송, 메시지 히스토리, 이미지 전송, 채팅 알림",
      "testStrategy": "실시간 메시지 전송 확인, 메시지 순서 보장, 이미지 업로드 테스트",
      "phase": "Phase 3"
    },
    {
      "id": 25,
      "title": "푸시 알림 시스템",
      "description": "주요 이벤트에 대한 모바일/웹 푸시 알림",
      "status": "pending",
      "priority": "medium",
      "dependencies": [
        21,
        22
      ],
      "details": "Expo Notifications 설정, FCM 연동, 알림 템플릿, 알림 권한 관리, 알림 설정",
      "testStrategy": "다양한 이벤트 알림 확인, 권한 처리, 알림 클릭 동작 테스트",
      "phase": "Phase 3"
    },
    {
      "id": 26,
      "title": "고급 결제 시스템",
      "description": "다양한 결제 수단 및 할인/쿠폰 시스템",
      "status": "pending",
      "priority": "medium",
      "dependencies": [
        16
      ],
      "details": "간편결제 연동, 쿠폰 시스템, 포인트 적립, 부분 환불, 정기 결제 지원",
      "testStrategy": "다양한 결제 방식 테스트, 할인 계산 검증, 환불 프로세스 확인",
      "phase": "Phase 3"
    },
    {
      "id": 27,
      "title": "리뷰 및 평점 시스템",
      "description": "주문 완료 후 리뷰 작성 및 평점 관리",
      "status": "pending",
      "priority": "low",
      "dependencies": [
        15,
        19
      ],
      "details": "리뷰 작성, 평점 등록, 이미지 첨부, 리뷰 신고, 평균 평점 계산",
      "testStrategy": "리뷰 작성 프로세스, 평점 계산 정확도, 이미지 업로드 확인",
      "phase": "Phase 3"
    },
    {
      "id": 28,
      "title": "관리자 대시보드",
      "description": "플랫폼 관리를 위한 관리자 전용 대시보드",
      "status": "pending",
      "priority": "low",
      "dependencies": [
        11,
        18,
        27
      ],
      "details": "사용자 관리, 레스토랑 승인, 배달기사 관리, 통계 조회, 신고 처리",
      "testStrategy": "관리 기능 테스트, 통계 정확도, 권한 제어 확인",
      "phase": "Phase 3"
    },
    {
      "id": 29,
      "title": "성능 최적화",
      "description": "시스템 전반적인 성능 최적화 및 병목 제거",
      "status": "pending",
      "priority": "medium",
      "dependencies": [
        22,
        23,
        24
      ],
      "details": "데이터베이스 쿼리 최적화, 캐싱 전략, 이미지 최적화, API 응답 시간 개선",
      "testStrategy": "성능 벤치마크, 로드 테스트, 응답 시간 측정",
      "phase": "Phase 4"
    },
    {
      "id": 30,
      "title": "배포 환경 구성",
      "description": "프로덕션 배포를 위한 인프라 설정",
      "status": "pending",
      "priority": "high",
      "dependencies": [
        29
      ],
      "details": "CI/CD 파이프라인, Docker 이미지 빌드, 환경별 설정, 도메인 연결, SSL 인증서",
      "testStrategy": "배포 프로세스 테스트, 환경별 동작 확인, SSL 연결 검증",
      "phase": "Phase 4"
    },
    {
      "id": 31,
      "title": "보안 강화",
      "description": "프로덕션 환경 보안 설정 및 취약점 점검",
      "status": "pending",
      "priority": "high",
      "dependencies": [
        30
      ],
      "details": "HTTPS 강제, Rate Limiting, SQL Injection 방어, XSS 방어, 민감 정보 암호화",
      "testStrategy": "보안 스캔, 취약점 테스트, 암호화 확인",
      "phase": "Phase 4"
    },
    {
      "id": 32,
      "title": "모니터링 시스템",
      "description": "시스템 모니터링 및 로깅 설정",
      "status": "pending",
      "priority": "medium",
      "dependencies": [
        30,
        31
      ],
      "details": "에러 추적, 성능 모니터링, 로그 수집, 알림 설정, 대시보드 구성",
      "testStrategy": "모니터링 데이터 수집 확인, 알림 발송 테스트, 대시보드 동작 검증",
      "phase": "Phase 4"
    },
    {
      "id": 33,
      "title": "테스트 및 QA",
      "description": "종합적인 테스트 및 품질 보증",
      "status": "pending",
      "priority": "high",
      "dependencies": [
        31,
        32
      ],
      "details": "단위 테스트, 통합 테스트, E2E 테스트, 사용자 수용 테스트, 성능 테스트",
      "testStrategy": "전체 시스템 종합 테스트, 사용자 시나리오 검증, 버그 리포트 및 수정",
      "phase": "Phase 4"
    }
  ]
}